What happens when you initialize a repository? Why do you need to do it?

You need to create a commit because git can't do it for you.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

it offers good value. its different because it is.

How can you use the staging area to make sure you have one commit per logical
change?

The staging area shows what has been changed which shows us whether or not
the commit was logical or not.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Having different branches are helpful if you want to have a stable version of
the game but also want another experimental version or a different language
version. The branches allow these, but don't change the master stable version
so it allows for different versions of the game to exist at the same time.

How do the diagrams help you visualize the branch structure?

The diagrams allow for us to see where each branch broke off so that we don't
forget where each branch is and which commit it ended off on.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

Merging 2 branches allows for a new final branch to be created so that every
good thing added is in the same file. The diagram allows us to visualize
how exactly these were merged and which commits are accessible through each.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

Git's auto merging sometimes creates conflicts or makes changes that wasn't
wanted because collaborators were planning on merging code manually. It creates
some issues that would be a lot easier to resolve with manual merges.
